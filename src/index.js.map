{"version":3,"sources":["index.jsx"],"names":[],"mappings":";;AAAA,8BAA0B;;;;AAC1B,qCAAmC;;AAMnC,qDAAiD;;;;AACjD,8BAAoD;;AACpD,yCAA0C;;;;AAC1C,2CAAwC;;;;AACxC,yCAAwC;;AACxC,kCAA8B;;;;AAE9B,+CAA2C;;;;;;;;;;;;;;;AAE3C,IAAI,YAAY,GAAG,KAAK,CAAC;;AAEzB,IAAI,UAAU,GAAG,sBAAiB,CAAC;;AAEnC,IAAG,CAAC,YAAY,EAAC;AACb,QAAI,gBAAgB,GAAG,4BAAc,CAAC;AACtC,cAAU,gCAAQ,UAAU,IAAC,gBAAgB,EAAC,CAAC;CAClD;;AAED,IAAM,KAAK,GAAG,+CAEV,2DAAmB,UAAU,EAAC,CACjC,CAAC;;AAGF,IAAI,MAAM,YAAA,CAAC;AACX,IAAI,QAAQ,YAAA,CAAC;AACb,IAAI,IAAI,YAAA,CAAC;AACT,IAAI,KAAK,YAAA,CAAC;AACV,IAAG,CAAC,YAAY,EAAE;AACd,UAAM,GAAG,oBAAoB,CAAC;AAC9B,YAAQ,GAAG,MAAM,CAAC;AAClB,QAAI,GAAG,GAAG,CAAC;AACX,SAAK,GAAG,sCAAsC,CAAC;CAClD,MAAK;AACF,QAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACpC,SAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACtC,UAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACxC,YAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;CAC/C;;AAAA,AAED,mBAAS,IAAI,CAAC,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAC,KAAK,CAAC;;;;;;AAAC,AAM1C,sBACI;;MAAU,KAAK,EAAE,KAAK,AAAC;;CAEZ,EACX,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CACjC,CAAC","file":"index.js","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\n//<Router history={hashHistory}> 兼容低版本浏览器，前端路由通过＃，例如：http://localhost:8080/#/winner\n// import { Router, Route, Link, hashHistory, IndexRoute } from 'react-router';\n//import Voting from './components/Voting';\n//与纯组件Voting不同，VotingContainer 封装了纯组件和一些逻辑用来与Redux Store协同工作，这些特性是react-redux提供的\n// import AppleBasket from './containers/AppleBasket';\nimport RootReducer from './reducers/RootReducer';\nimport { createStore,applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createLogger from 'redux-logger';\nimport  { Provider } from 'react-redux';\nimport router from './router';\n// import io from 'socket.io-client';\nimport mySocket from './services/mySocket';\n\nvar inProduction = false;\n\nlet middleware = [thunkMiddleware];\n\nif(!inProduction){\n    let loggerMiddleware = createLogger();\n    middleware = [ ...middleware,loggerMiddleware];\n}\n\nconst store = createStore(\n    RootReducer,\n    applyMiddleware(...middleware)\n);\n\n\nlet siteip;\nlet siteport;\nlet umid;\nlet token;\nif(!inProduction) {\n    siteip = 'usanode1.51his.com';\n    siteport = '8443';\n    umid = '1';\n    token = '0ac760ce-9553-4f4c-93a7-01bb86970a7f';\n}else {\n    umid = localStorage.getItem(\"umid\");\n    token = localStorage.getItem(\"token\");\n    siteip = localStorage.getItem(\"siteip\");\n    siteport = localStorage.getItem(\"siteport\");\n}\n//实际通过登录页面传递参数(直接传或通过本地存储传)\nmySocket.init(siteip,siteport,umid,token);\n\n// store.dispatch({\n//     type: 'lists/SET_JUSTLOGIN',\n// });\n\nrender(\n    <Provider store={store}>\n        {router}\n    </Provider>,\n    document.getElementById('app')\n);"]}